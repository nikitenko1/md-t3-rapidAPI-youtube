import React, { useState, useRef } from "react";
import Image from "next/legacy/image";
import Head from "next/head";
import Link from "next/link";
import { useSession } from "next-auth/react";
import { videoState } from "atom/video";
import { useRecoilState } from "recoil";
import useOutsideClick from "hooks/useOutsideClick";
import useYoutubeHome from "hooks/useYoutubeHome";
import { v4 } from "uuid";
import { IVideoV3 } from "interface";
import ReactTimeAgo from "react-time-ago";
import Body from "components/Body";
import Loader from "components/Loader";
import MenuHorizontal from "components/MenuHorizontal";
import SaveDialog from "components/SaveDialog";

const categories = [
  "Music",
  "Everyday American English",
  "Gaming",
  "Study",
  "Programming",
  "War In Ukraine",
  "BBC News",
  "Podcasts",
  "Premier League",
  "Action Movie",
  "Mixes",
  "Anime",
  "Health",
];

const VideoSnippet = ({ video }: { video: IVideoV3 }) => {
  const [dialogOpen, setDialogOpen] = useState(false);
  const [_videoState, setVideoState] = useRecoilState(videoState);

  const session = useSession();

  const ref = useRef(null);

  useOutsideClick(ref, () => {
    setDialogOpen(false);
  });

  const saveVideoProps = {
    videoId: video.id.videoId,
    thumbnail: video.snippet.thumbnails.medium.url,
    title: video.snippet.title,
    authorTitle: video.snippet.channelTitle,
    publishedTimeText: video.snippet.publishTime.toString(),
  };

  return (
    <Link href={`/watch?v=${video.id.videoId}`}>
      <div className={`flex cursor-pointer flex-col  items-center gap-2`}>
        <div className="relative ">
          <Image
            src={video.snippet.thumbnails.medium.url ?? ""}
            height={video.snippet.thumbnails.medium.height ?? 200}
            objectFit="cover"
            width={(video.snippet.thumbnails.medium.width as any) ?? 200}
            className="w-1/2 rounded-xl"
            alt=""
          />
        </div>

        <div className="space-y-2">
          <h1 className="... max-w-xs overflow-hidden text-ellipsis text-xs text-white md:text-sm">
            {video.snippet.title}
          </h1>

          <div className="flex items-center justify-between gap-x-2">
            <p className="text-sm text-gray-400">
              <ReactTimeAgo date={video.snippet.publishTime} />
            </p>
            {session.status === "authenticated" ? (
              <>
                <div
                  className="relative"
                  onClick={(e) => {
                    e.preventDefault();
                    setDialogOpen(!dialogOpen);
                    setVideoState(saveVideoProps);
                  }}
                >
                  <MenuHorizontal />
                  {dialogOpen ? <SaveDialog {...saveVideoProps} /> : null}
                </div>
              </>
            ) : null}
          </div>
        </div>
      </div>
    </Link>
  );
};

const HomePage = () => {
  const [category, setCategory] = useState("Music");
  const { data, loading, error } = useYoutubeHome(
    `/search?q=${category}&part=snippet,id&regionCode=US&maxResults=50`
  );

  return (
    <div>
      <Head>
        <title>Youtube</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Body>
        <div
          className="mb-6 flex cursor-pointer items-center gap-x-2 overflow-x-scroll scrollbar-thin
           scrollbar-thumb-slate-500 scrollbar-thumb-rounded-full"
        >
          {categories.map((item: string) => (
            <span
              key={v4()}
              onClick={() => setCategory(item)}
              className={`${item} whitespace-nowrap rounded-full border border-zinc-500 bg-zinc-700 
              px-2 py-1 text-white transition-all duration-200 ease-in-out hover:bg-zinc-500`}
            >
              {item}
            </span>
          ))}
        </div>
        {loading ? <Loader col={true} /> : null}
        <div className="grid grid-cols-skeleton items-center gap-4">
          {data?.items?.map((video: IVideoV3) => (
            <VideoSnippet key={v4()} video={video} />
          ))}
        </div>
      </Body>
    </div>
  );
};

export default HomePage;
